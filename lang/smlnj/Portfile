# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.99.6
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     x86_64 i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 4afbfae5aa7231a9d285a8f166050aaede343d6c9afbebd5267900727971d9e5 b0ddf2bf62a693eb55451909223fe6afca8110c9 2534568 \
    boot.amd64-unix.tgz     487518b7f8c92d48ae208802ab717f5f6d2bdf48b7f854b654936c32964cbd49 677cf65758485921ce8dc6173b7735fe4a64b287 5994138 \
    boot.ppc-unix.tgz       a1dae55d3785d429563847c5a28b5bc32cd05bf03cdbb958c97d68c94394e88c 9b06ec27116528fe0293dd574c44a6d870edb0bb 5863030 \
    boot.x86-unix.tgz       edf934c7d963f649584e58f278cb8a692c99a1c740c058d7b0d2bba8fe8c11a5 f7028436159a43930b3137bf53553d1d13f19c48 5941565 \
    config.tgz              6923a66c7171a9338aff9c72ea13402ea9fa72a55777e789512e0deca17f5a81 f6882277b8b76a72bf468252de46bf677d008dcb 23322   \
    cm.tgz                  ed125276045cb26d533055db91450bc16a55610cd38ebb86f1a65e99f0c6bb39 32708c5c9941ef435bde637d2c4aee9e93d2a63a 220352  \
    compiler.tgz            1dc0d31d8901335ddfaa4725c7c3174dc4fd8e8b5fbfb92a2cb22ae9e73412be 7948a742e842d261f55e1f401115ccff8cc5316f 888542  \
    runtime.tgz             460276e07c71ef0dcdcc20fa54cc54fbc34e2a32ed0e5eaaf3ece5d289e7b81e b54e88ea0b2e26fd4255efd8cd5b66b9aca0053b 335083  \
    system.tgz              98ff64f8c8af9340f221fc79ce5f327d9b5ab72e96a0d495776d0f86f859a00a be53775754af7373bb1d2cbfcfaa52828459258b 295227  \
    MLRISC.tgz              eb31ae4b96113f0019ab2b7ba64f1f82d9e3cbf3485ac0e70b987c16c43ba805 593d5dc33342ae79b34f43600b3d0ee266622553 1457412 \
    smlnj-lib.tgz           9075c016ccf3211fa0941240ec08cb1a91a747087aec260ed4cc590d92385953 beec274c84b62ec8b53b67903a3b304263c838c1 666096  \
    old-basis.tgz           556a03c02f0355c982323e0087f301c094207cbb1fc67dc6ba168cc1b969dda2 2d2112d912497a134fdc521aa68420164fdc198d 1365    \
    ckit.tgz                8e0167e063c8595d9770762f0ad3b3ffe18bd636b72f5cb3e16a24ace4da797a 4b914e22ce72cb5c6cf8db49783bc73aef049d8f 200785  \
    nlffi.tgz               f6f265593a987e903514a33d42cc723d30004486e916ce80b2b0a5ec21ed7932 f06b555d553cf9d5fd35d263d1f4d7e2dad06b68 74683   \
    cml.tgz                 07ff4bd54fc2572808802023789b1b657960db09dc6b2a039d926a0e9d7f729e 6577ee4fdd4f52fcc6004317d023bdd06992ece5 103972  \
    eXene.tgz               ff3e59fabdeae9dc2a5c1a38667725df5de38ee5ac73ea7af92ad69422469781 863a43472695bb868f748eada3f24877977627e0 714474  \
    ml-lpt.tgz              d005757f961a3d290c8e502ff67473b8a584667fee4f2f5e3064eb870a3d4eb6 364d750e4964866cc1c982d63c2c6187e6aa48d1 267373  \
    ml-lex.tgz              c1dd102e81b878715099c2ecf60e99b3e5e70bde6ff7d618ccadb1ab5adc07d7 643257e2b7fee2cf52948c0956972de9c8672460 28037   \
    ml-yacc.tgz             61122420a43a9371c52c20a436e87b812bafea61d614901070436e1ea46b0ca2 654ed214219bed6dad921964eb4d3a7eeb1be0a3 101370  \
    ml-burg.tgz             69e07138776c14d6f1c900132af5f51db78bcce1d703c09d77e4b3eb182f8bf9 c69d103201e495cfdb6275ec4f5308a609cdbf0c 40301   \
    pgraph.tgz              d7a8d6dfacb0ed2e34fc16756c4c87ad15ac1e8fcc273d439337b1ec965175e8 e339ce7509ec83cc414f3d566fb94ea2222f4cf5 5367    \
    trace-debug-profile.tgz a12d7307ed48b9008fdc10b3a29dd4b15d511cb388eac0146e2f89161830f1db 546c9d3b41aafc265904f1e3244f002053f94d58 3890    \
    heap2asm.tgz            ee66ee96e5f3233aa0ebd7e356774a27893e3473e6daafa7fd51d16be549ea99 4a19e26e1aedceae6158873c3bed7b466e347087 1720    \
    smlnj-c.tgz             fdc677bd64144902b104d514409dd4ef74756ea26c550e7a0359f60658520215 f14cd50f08b14f1cf16113685ddf3df5aed52340 10587   \
    asdl.tgz                2594725b7bb567988c368b36420a8d7754f62344007fd54d929c471191b4b95b 33fa24b544454b196bc48286d86a42fdf79517db 241730  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags} ${configure.cc_archflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request pgraph-util|request pgraph-util|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request nowhere|request nowhere|" \
        ${worksrcpath}/config/targets
    reinplace "s|#  request heap2asm|  request heap2asm|" \
        ${worksrcpath}/config/targets
}

# error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘ml_val_t’
configure.cflags-append -std=c99

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target
if {${configure.build_arch} eq "x86_64"} {
    build.args-append   -default 64
}

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/(1[0-9.]+)/}
